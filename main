#include <iostream>
#include "Hotel.hpp"
using namespace std;

void menuCliente(ListaDeInmuebles& TodosInmuebles);
void menuPropietario(ListaDeInmuebles& TodosInmuebles, ListaDePropietarios& TodosPropietarios);
void menuConsulta(ListaDeInmuebles& ListaInmuebles);
void menuAdministrarInmuebles(ListaDeInmuebles& misInmuebles,ListaDeInmuebles& TodosInmuebles, Propietario* propietarioActual);
// void menuModificarInmueble(Inmueble& inmuebleAModificar);

int main() {   
    ListaDeInmuebles TodosInmuebles(0);
    TodosInmuebles.leerInmuebles();
    ListaDePropietarios TodosPropietarios(0);
    TodosPropietarios.leerPropietarios();
    int opcion = 0;
    
    while (opcion != 3) {
        cout << "\x1B[1;32m"; 
        cout << "\n---- Menu Principal ----\n";
        cout << "\x1B[33m"; 
        cout << "1. Cliente" << endl;
        cout << "2. Propietario" << endl;
        cout << "3. Salir" << endl;
        cout << "\x1B[0m"; 
        cout << "Como desea ingresar? ";
        cin >> opcion;

        switch (opcion) {
            case 1:
                menuCliente(TodosInmuebles);
                break;
            case 2:
                menuPropietario(TodosInmuebles,TodosPropietarios);
                break;
            case 3:
                cout << "\x1B[31m"; 
                cout << "Saliendo ..." << endl;
                cout << "\x1B[0m"; 
                break;
            default: 
                cout << "\x1B[31m"; 
                cout << "Opcion no valida. Intente de nuevo" << endl;
                cout << "\x1B[0m"; 
        }
    }
    
    TodosInmuebles.guardarInmuebles();
    TodosPropietarios.guardarPropietarios();
    return 0;
}

void menuCliente(ListaDeInmuebles& TodosInmuebles) {
    int op = 0;

    while (op != 3) {
        cout << "\x1B[1;32m"; 
        cout << "\n---- Menu del Cliente ----" << endl;
        cout << "\x1B[33m"; 
        cout << "1. Ver todos los inmuebles" << endl;
        cout << "2. Consultar" << endl;
        cout << "3. Salir" << endl;
        cout << "\x1B[0m"; 
        cout << "Selecciona una opcion: ";
        cin >> op;

        switch(op) {
            case 1:
                cout << "\x1B[1;1m \n------------------------------ Lista de Inmuebles ------------------------------\n \x1B[0m";
                TodosInmuebles.mostrar();
                break;
            case 2: {
                menuConsulta(TodosInmuebles);
            }
            case 3: 
                cout << "\x1B[31m"; 
                cout << "Saliendo ..." << endl;
                cout << "\x1B[0m"; 
                break;
            default: 
                cout << "\x1B[31m"; 
                cout << "Opcion no valida" << endl;
                cout << "\x1B[0m";
        }
    }
}

void menuConsulta(ListaDeInmuebles& ListaInmuebles) {
    int op = 0;

    while(op!=4) {
        cout << "\x1B[1;32m"; 
        cout << "\n---- Menu de Consulta ----" << endl;
        cout << "\x1B[33m"; 
        cout << "1. Buscar por direccion" << endl;
        cout << "2. Buscar por numero de cuartos" << endl;
        cout << "3. Buscar por precio" << endl;
        cout << "4. Volver al menu principal" << endl;
        cout << "\x1B[0m"; 
        cout << "Selecciona una opcion: ";
        cin >> op;

        switch(op) {
            case 1: {
                char direccion[128];
                cout << "Ingrese la direccion a buscar: ";
                cin.ignore();
                cin.getline(direccion, 128);

                ListaDeInmuebles resultado = ListaInmuebles.buscarPorDireccion(direccion);
                cout << "\nResultados de la busqueda: " << endl;
                resultado.mostrar();
                break;
            }
            case 2: {
                int minCuartos = -1;
                int maxCuartos = -1;
                cout << "Ingrese el numero minimo de cuartos (o -1 para ignorar): ";
                cin >> minCuartos;
                cout << "Ingrese el numero maximo de cuartos (o -1 para ignorar): ";
                cin >> maxCuartos;

                ListaDeInmuebles resultado = ListaInmuebles.buscarPorNumCuartos(minCuartos, maxCuartos);
                cout << "\nResultado de la busqueda: \n";
                resultado.mostrar();
                break;
            }
            case 3: {
                float precioMin = -1;
                float precioMax = -1;
                cout << "Ingrese el precio minimo (o -1 para ignorar): ";
                cin >> precioMin;
                cout << "Ingrese el precio maximo (o -1 para ignorar): ";
                cin >> precioMax;
                ListaDeInmuebles resultado = ListaInmuebles.buscarPorPrecio(precioMin, precioMax);
                cout << "\nResultado de la busqueda:\n";
                resultado.mostrar();
                break;
            }
            case 4:
                cout << "Volviendo al menu del cliente" << endl;
                break;
            default:
                cout << "\x1B[31m"; 
                cout << "Opcion no valida. Intente de nuevo" << endl;
                cout << "\x1B[0m";
        }
    }
}

void menuPropietario(ListaDeInmuebles& TodosInmuebles, ListaDePropietarios& TodosPropietarios) {
    int op = 0;
    while (op != 3) {
        cout << "\x1B[1;32m"; 
        cout << "\n---- Menu del Propietario ----" << endl;
        cout << "\x1B[33m"; 
        cout << "1. Registrarse" << endl;
        cout << "2. Iniciar sesion" << endl;
        cout << "3. Salir" << endl;
        cout << "\x1B[0m"; 
        cout << "Seleccione una opcion: ";
        cin >> op; 
        
        if (op == 1) {
            Propietario nuevoPropietario;
            char nombre[128], telefono[10], nuevaContrasena[100], dni[9];

            cout << "Ingrese su nombre: ";
            cin.ignore();
            cin.getline(nombre,128);
            nuevoPropietario.setNombre(nombre);

            cout << "Ingrese su DNI: ";
            cin.getline(dni,9);
            nuevoPropietario.setDni(dni);

            cout << "Ingrese su telefono: ";
            cin.getline(telefono,10);
            nuevoPropietario.setTelefono(telefono);

            cout << "Establezca una contrasena: ";
            cin.getline(nuevaContrasena, 100);
            nuevoPropietario.setContrasena(nuevaContrasena);

            TodosPropietarios.addPropietario(nuevoPropietario);
            // TodosPropietarios.guardarPropietarios();
            cout << "\x1B[1;32m";
            cout << "Registro existoso" << endl;
            cout << "\x1B[0m"; 

            return;
        } else if (op == 2) {
            char dni[9], contrasena[100];
            int opcion = 0;
            cout << "Ingrese su DNI: ";
            cin.ignore();
            cin.getline(dni,10);

            cout << "Ingrese su contrasena: ";
            cin.getline(contrasena,100);

            Propietario* propietarioActual = TodosPropietarios.verificar(dni,contrasena);
            if (propietarioActual != nullptr) {
                // ListaDeInmuebles misInmuebles = TodosInmuebles.filtrarPorPropietario(propietarioActual->getDni()); 
                while (opcion != 4){ 
                    ListaDeInmuebles misInmuebles = TodosInmuebles.filtrarPorPropietario(propietarioActual->getDni()); // Actualice cada vez que hace una modificaci√≥n
                    cout << "\x1B[1;32m"; 
                    cout << "\n---- Menu del Propietario ----" << endl;
                    cout << "\x1B[33m"; 
                    cout << "1. Mostrar mis inmuebles" << endl;
                    cout << "2. Administrar mis inmuebles" << endl;
                    cout << "3. Consultar" << endl;
                    cout << "4. Salir" << endl;
                    cout << "\x1B[0m"; 
                    cout << "Selecciona una opcion: ";
                    cin >> opcion;
                    cin.ignore();

                    switch(opcion) {
                        case 1: 
                            cout << "\nMis inmuebles: " << endl;
                            misInmuebles.mostrar();
                            break;
                        case 2:
                            menuAdministrarInmuebles(misInmuebles,TodosInmuebles,propietarioActual);
                            // misInmuebles = TodosInmuebles.filtrarPorPropietario(propietarioActual->getDni());
                            break;
                        case 3:
                            menuConsulta(misInmuebles);
                            break;
                        case 4:
                            cout << "Saliendo del menu del propietario" << endl;
                            break;
                        default:
                            cout << "\x1B[31m"; 
                            cout << "Opcion invalida" << endl;
                            cout << "\x1B[0m";
                    }
                }
            } else {
                cout << "\x1B[31m"; 
                cout << "Verificacion fallida" << endl;
                cout << "\x1B[0m";
            }
        } else if (op == 3) {
            break;
        } else {
            cout << "\x1B[31m"; 
            cout << "Opcion no valida" << endl;
            cout << "\x1B[0m"; 
        }
    }
}

void menuAdministrarInmuebles(ListaDeInmuebles& misInmuebles,ListaDeInmuebles& TodosInmuebles, Propietario* propietarioActual) {
    int opcion = 0;
    while (opcion != 4) {
        cout << "\x1B[1;32m"; 
        cout << "\n---- Administrar Inmuebles ----" << endl;
        cout << "\x1B[33m"; 
        cout << "1. Agregar inmueble" << endl;
        cout << "2. Modificar inmueble" << endl;
        cout << "3. Eliminar inmueble" << endl;
        cout << "4. Salir" << endl;
        cout << "\x1B[0m";
        cout << "Selecciona una opcion: ";
        cin >> opcion;
        cin.ignore();

        switch(opcion) {
            case 1: {
                int numInmuebles = 0;
                cout << "Inmuebles a ingresar: ";
                cin >> numInmuebles;
                for (int i = 0; i < numInmuebles; i++) {
                    char direccion[128];
                    int numCuartos;
                    float precio;
                    cout << "Ingrese la direccion del inmueble: ";
                    cin.ignore();
                    cin.getline(direccion, 128);
                    cout << "Ingrese el numero de cuartos: ";
                    cin >> numCuartos;
                    cout << "Ingrese el precio del inmueble: ";
                    cin >> precio;

                    Inmueble nuevoInmueble;
                    nuevoInmueble.setDireccion(direccion);
                    nuevoInmueble.setNumCuartos(numCuartos);
                    nuevoInmueble.setPrecio(precio);
                    nuevoInmueble.setDniPropietario(propietarioActual->getDni());

                    TodosInmuebles.addInmueble(nuevoInmueble);
                }
                break;
            }
            case 2: {
                int index = 0;
                misInmuebles.mostrar();
                cout << "Ingrese el indice del inmueble a modificar: ";
                cin >> index;
                index--;

                if (index >= 0 && index < misInmuebles.getSize()) {
                    Inmueble& inmuebleAModificar = TodosInmuebles.getInmueble(index); /// 
                    int opModificar = 0;
                    while (opModificar != 4) {
                        cout << "\x1B[1;32m"; 
                        cout << "\n---- Menu de Modificacion ----" << endl;
                        cout << "\x1B[33m"; 
                        cout << "1. Modificar direccion" << endl;
                        cout << "2. Modificar numero de cuartos" << endl;
                        cout << "3. Modificar precio" << endl;
                        cout << "4. Salir" << endl;
                        cout << "\x1B[0m";
                        cout << "Selecciona una opcion: ";
                        cin >> opModificar;
                        cin.ignore();

                        switch(opModificar) {
                            case 1: {
                                char nuevaDireccion[128];
                                cout << "Ingrese la nueva direccion (actual: " << inmuebleAModificar.getDireccion() << "): ";
                                cin.getline(nuevaDireccion, 128);
                                inmuebleAModificar.setDireccion(nuevaDireccion);
                                cout << "\x1B[1;32m";
                                cout << "Direccion modificada exitosamente." << endl;
                                cout << "\x1B[0m"; 
                                break;
                            }
                            case 2: {
                                int nuevoNumCuartos;
                                cout << "Ingrese el nuevo numero de cuartos (actual: " << inmuebleAModificar.getNumCuartos() << "): ";
                                cin >> nuevoNumCuartos;
                                inmuebleAModificar.setNumCuartos(nuevoNumCuartos);
                                cout << "\x1B[1;32m"; 
                                cout << "Numero de cuartos modificado exitosamente." << endl;
                                cout << "\x1B[0m"; 
                                break;
                            }
                            case 3: {
                                float nuevoPrecio;
                                cout << "Ingrese el nuevo precio (actual: " << inmuebleAModificar.getPrecio() << "): ";
                                cin >> nuevoPrecio;
                                inmuebleAModificar.setPrecio(nuevoPrecio);
                                cout << "\x1B[1;32m";
                                cout << "Precio modificado exitosamente." << endl;
                                cout << "\x1B[0m"; 
                                break;
                            }
                            case 4:
                                cout << "Saliendo del menu modificar" << endl;
                                break;
                            default:
                                cout << "\x1B[31m"; 
                                cout << "Opcion no valida" << endl;
                                cout << "\x1B[0m"; 
                        }
                    }

                } else {
                    cout << "Indice fuera del rango" << endl;
                }
                break;
            }
            case 3: {
                misInmuebles.mostrar();
                int index = 0;
                cout << "Ingrese el indice del inmueble a eliminar: ";
                cin >> index;
                index--;
                misInmuebles.eliminarInmueble(index);
                TodosInmuebles.eliminarInmueble(index);
                break;
            }
            case 4:
                cout << "Saliendo..." << endl;
                break;
            default:
                cout << "\x1B[31m"; 
                cout << "Opcion no valida" << endl;
                cout << "\x1B[0m"; 
        }
    }
    // misInmuebles = TodosInmuebles.filtrarPorPropietario(propietarioActual->getDni());
}

// void menuModificarInmueble(Inmueble& inmuebleAModificar) {
//     int opModificar = 0;
//     while (opModificar != 4) {
//         cout << "\x1B[1;32m"; 
//         cout << "\n---- Menu de Modificacion ----" << endl;
//         cout << "\x1B[33m"; 
//         cout << "1. Modificar direccion" << endl;
//         cout << "2. Modificar numero de cuartos" << endl;
//         cout << "3. Modificar precio" << endl;
//         cout << "4. Salir" << endl;
//         cout << "\x1B[0m";
//         cout << "Selecciona una opcion: ";
//         cin >> opModificar;
//         cin.ignore();

//         switch(opModificar) {
//             case 1: {
//                 char nuevaDireccion[128];
//                 cout << "Ingrese la nueva direccion (actual: " << inmuebleAModificar.getDireccion() << "): ";
//                 cin.getline(nuevaDireccion, 128);
//                 inmuebleAModificar.setDireccion(nuevaDireccion);
//                 cout << "\x1B[1;32m";
//                 cout << "Direccion modificada exitosamente." << endl;
//                 cout << "\x1B[0m"; 
//                 break;
//             }
//             case 2: {
//                 int nuevoNumCuartos;
//                 cout << "Ingrese el nuevo numero de cuartos (actual: " << inmuebleAModificar.getNumCuartos() << "): ";
//                 cin >> nuevoNumCuartos;
//                 inmuebleAModificar.setNumCuartos(nuevoNumCuartos);
//                 cout << "\x1B[1;32m"; 
//                 cout << "Numero de cuartos modificado exitosamente." << endl;
//                 cout << "\x1B[0m"; 
//                 break;
//             }
//             case 3: {
//                 float nuevoPrecio;
//                 cout << "Ingrese el nuevo precio (actual: " << inmuebleAModificar.getPrecio() << "): ";
//                 cin >> nuevoPrecio;
//                 inmuebleAModificar.setPrecio(nuevoPrecio);
//                 cout << "\x1B[1;32m";
//                 cout << "Precio modificado exitosamente." << endl;
//                 cout << "\x1B[0m"; 
//                 break;
//             }
//             case 4:
//                 cout << "Saliendo del menu modificar" << endl;
//                 break;
//             default:
//                 cout << "\x1B[31m"; 
//                 cout << "Opcion no valida" << endl;
//                 cout << "\x1B[0m"; 
//         }
//     }
// }
